{"version":3,"sources":["Components/Title.jsx","Container/Navbar.jsx","Components/Input.jsx","Components/Submit.jsx","Container/Form.jsx","Components/GithubStats.jsx","Components/UserDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","React","Component","Navbar","role","aria-label","href","width","height","Input","props","type","name","placeholder","Submit","Form","onSubmit","this","getUser","Components_Input","Components_Submit","GithubStats","class","followers","following","public_repos","public_gists","User","_this$props$values","values","username","fullName","location","bio","avatar_URL","src","alt","Components_GithubStats","App","state","_callee","e","API_CALL","Data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","status","_this","setState","login","avatar_url","stop","_this$state","Container_Navbar","Components_Title","Container_Form","Components_UserDetails","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03c58ad3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../css/Title.css'\r\n\r\nclass Title extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h1 className=\"title is-1\">Github User Finder</h1>\r\n        <p className=\"subtitle\">You can search your friends github profile</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport '../css/Navbar.css'\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return <nav className=\"navbar has-background-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand is-center\">\r\n          <a href=\"/\" className=\"navbar-item has-text-white\">\r\n            <i className=\"fab fa-github navbar_logo\" width=\"112\" height=\"28\" />\r\n            <span className=\"navbar_title\">Github Finder</span>\r\n          </a>\r\n        </div>\r\n      </nav>;\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Input = props => {\r\n    return (\r\n        <div className=\"field\">\r\n            <div className=\"control\">\r\n                <input type=\"text\" className=\"input\" name=\"username\" placeholder=\"Insert Username\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Submit = ()=> {\r\n    return(\r\n        <div className=\"field is-grouped\">\r\n            <div className=\"control\">\r\n                <button className=\"button is-link\">Submit</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Submit;","import React from \"react\";\r\nimport Input from \"../Components/Input\";\r\nimport Submit from \"../Components/Submit\";\r\n\r\nclass Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.getUser}>\r\n        <Input />\r\n        <Submit />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst GithubStats = props => {\r\n  return (\r\n    <nav class=\"level\">\r\n      {props.followers && (\r\n        <div class=\"level-item has-text-centered\">\r\n          <div>\r\n            <p class=\"heading\">Followers</p>\r\n            <p class=\"title\">{props.followers}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {props.following && (\r\n        <div class=\"level-item has-text-centered\">\r\n          <div>\r\n            <p class=\"heading\">Following</p>\r\n            <p class=\"title\">{props.following}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {props.public_repos && (\r\n        <div class=\"level-item has-text-centered\">\r\n          <div>\r\n            <p class=\"heading\">Public Repos</p>\r\n            <p class=\"title\">{props.public_repos}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {props.public_gists && (\r\n        <div class=\"level-item has-text-centered\">\r\n          <div>\r\n            <p class=\"heading\">Public Gists</p>\r\n            <p class=\"title\">{props.public_gists}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default GithubStats;\r\n","import React, { Component } from \"react\";\r\nimport GithubStats from \"../Components/GithubStats\";\r\nimport \"../css/UserDetails.css\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    const {\r\n      values: {\r\n        username,\r\n        fullName,\r\n        location,\r\n        bio,\r\n        avatar_URL,\r\n        public_repos,\r\n        public_gists,\r\n        followers,\r\n        following\r\n      }\r\n    } = this.props;\r\n    return <div className=\"user\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-3\">\r\n            <figure class=\"image is-256x256\">\r\n              <img src={avatar_URL} alt=\"\" />\r\n            </figure>\r\n          </div>\r\n          <div className=\"column\">\r\n            <h1 className=\"is-size-4\">{fullName}</h1>\r\n            <p className=\"is-size-5 has-text-grey-light\">\r\n              {username && <i>@{username}</i>}\r\n            </p>\r\n            <p>{location}</p>\r\n            <p>{bio}</p>\r\n            <div className=\"user__githubDetails\">\r\n              <GithubStats public_gists={public_gists} public_repos={public_repos} followers={followers} following={following} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\n// Component\nimport Title from \"./Components/Title\";\nimport Navbar from \"./Container/Navbar\";\nimport Form from \"./Container/Form\";\nimport User from \"./Components/UserDetails\";\n// Css\nimport \"bulma/css/bulma.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    username: \"\",\n    fullName: \"\",\n    location: \"\",\n    bio: \"\",\n    avatar_URL: \"\",\n    public_repos: \"\",\n    public_gists: \"\",\n    followers: \"\",\n    following: \"\"\n  };\n\n  getUser = async e => {\n    e.preventDefault();\n    let name = e.target.elements.username.value;\n\n    const API_CALL = await fetch(`https://api.github.com/users/${name}`);\n    const Data = await API_CALL.json();\n\n    if (API_CALL.status === 200) {\n      this.setState({\n        username: Data.login,\n        fullName: Data.name,\n        location: Data.location,\n        bio: Data.bio,\n        avatar_URL: Data.avatar_url,\n        public_repos: Data.public_repos,\n        public_gists: Data.public_gists,\n        followers: Data.followers,\n        following: Data.following\n      });\n    } else {\n      this.setState({\n        username: null,\n        fullName: null,\n        location: null,\n        bio: null,\n        avatar_URL: null,\n        public_repos: null,\n        public_gists: null,\n        followers: null,\n        following: null\n      });\n    }\n  };\n\n  render() {\n    const {\n      username,\n      fullName,\n      location,\n      bio,\n      avatar_URL,\n      public_repos,\n      public_gists,\n      followers,\n      following\n    } = this.state;\n    const values = {\n      username,\n      fullName,\n      location,\n      bio,\n      avatar_URL,\n      public_repos,\n      public_gists,\n      followers,\n      following\n    };\n    return (\n      <div>\n        <Navbar />\n        <div className=\"container is-fluid\">\n          <Title />\n          <Form getUser={this.getUser} />\n          <User values={values} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}